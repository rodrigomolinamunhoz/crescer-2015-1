@Inject só funciona com @Component
@Componet é um @Controller.

 
	public List<Filme> buscaTodosFilmesJava8() {
		return jdbcTemplate.query("SELECT nome, genero, anoLancamento, sinopse, imagem FROM Filme", new RowMapper<Filme>(){
			@Override
			public Filme mapRow(ResultSet rs, int arg1) throws SQLException {
				Filme filme2 = new Filme();
				filme2.setNome(rs.getString("nome"));
				filme2.setAnoLancamento(rs.getInt("anoLancamento"));
				filme2.setGenero(Genero.valueOf(rs.getString("genero")));
				filme2.setSinopse(rs.getString("sinopse"));
				filme2.setImagem(rs.getString("imagem"));			
				return filme2;
			}
			
		});
	}


----------------------------------------------------------------------------------------------------
package filmator.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import filmator.dao.FilmeDao;
import filmator.model.Filme;

@Controller
public class HomeController {

	
	@Inject 
	private FilmeDao filmeDao;
	
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Model model) {
		model.addAttribute("mensagem", "fulano de tal");
		model.addAttribute("millisegundos", System.currentTimeMillis());
		model.addAttribute("filmes",  new ArrayList<>());
		return "nomeDoArquivo";
	}
	
	
	@RequestMapping(value = "/inserir", method = RequestMethod.POST)
	public String inserir(Model model, Filme filme) {
		filmeDao.inserir(filme);
		model.addAttribute("filmes", filmeDao.buscaTodosFilmesJava8());
		model.addAttribute("mensagem", "Filme inserido com sucesso!");
		return "nomeDoArquivo";
	}
	
	@ResponseBody //@ResponseBody faz transformar o retorno para JSON!
	@RequestMapping(value = "/buscarTodos", method = RequestMethod.GET)
	public List<Filme> buscarTodos(Model model) {
		return filmeDao.buscaTodosFilmesJava8();
	}
	
}

--------------------------------------------------------------------------------------------------
	@Component
public class FilmeDao {

	@Inject
	private JdbcTemplate jdbcTemplate;
	
	
	public void inserir(Filme filme){
		jdbcTemplate.update("INSERT INTO Filme (nome) VALUES (?)", filme.getNome());
	}

	public List<Filme> buscaTodosFilmesJava8(){
		return jdbcTemplate.query("SELECT nome FROM Filme", (ResultSet rs, int rowNum) -> {	
			Filme filme = new Filme(rs.getString("nome"));
			return filme;
		});	
	}
	
}

// EM FILME CONTROLLER

@ResponseBody
	@RequestMapping(value = "/inserir", method = RequestMethod.GET)
	public List<Filme> inserir(Model model, @RequestParam String nome) {
		filmeDao.inserir(new Filme(nome));
		return filmeDao.buscaTodosFilmesJava8();
	}

